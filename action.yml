
name: 'Buildah Build and Push'
description: 'Run a `buildah.sh` script in the specified directory, create an image with the corresponding tag and push to a container registry'

inputs:
  remote-registry:
    description: 'Name of the remote registry to push to.'
    required: true
    default: 'docker.io'
  image-name:
    description: 'Name of the image. This should correspond to the name of the repository which will be pushed to.'
    required: true
  image-tag:
    description: 'Tag of the image. This should also correspond to the containing directory name. The resulting tag will use this name.'
    required: true
  short-sha:
    description: 'Short git SHA of the current commit. This will be appended to the pushed image tag.'
    required: true
  username:
    description: 'Username used for authentication to the target registry.'
    required: true
  password:
    description: 'Password used for authentication to the target registry.'
    required: true
  script-name:
    description: 'Name of the buildah script to execute to build the image.'
    required: true
    default: 'buildah.sh'

outputs:
  image-path:
    description: 'Full path to the image pushed to the remote registry.'
    value: ${{ steps.push.outputs.image-path }}

runs:
  using: "composite"
  steps:

    - name: Build image
      shell: bash
      run: |
        echo "::group::Build"
        echo "Running ${{ inputs.script-name }} script in directory ${{ inputs.image-tag }}"
        ${{ inputs.image-tag }}/${{ inputs.script-name }}
        echo "::endgroup::"
    - name: Push image
      id: push
      shell: bash
      run: |
        echo "::group::Push"
        IMG=${{ inputs.remote-registry }}/${{ inputs.image-name }}:${{ inputs.image-tag }}-${{ inputs.short-sha }}
        # buildah imageID does not support uppercase characters, so 'buildah push' was called with lowercase imageID.
        BUILDAH_IMG_ID=$(echo "${{ inputs.image-tag }}" | tr '[:upper:]' '[:lower:]')
        buildah push --creds=${{ inputs.username }}:${{ inputs.password }} ${BUILDAH_IMG_ID} ${IMG}
        echo "::set-output name=image-path::${IMG}"
        echo "Pushed image to ${IMG}"
        echo "::endgroup::"
